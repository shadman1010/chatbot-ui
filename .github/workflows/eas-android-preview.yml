name: Build Android Preview (APK)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - '.gitignore'
      - 'eas.json'

jobs:
  build-preview-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        # Use legacy peer deps to bypass React 19 / react-native-web@0.19 peer range mismatch
        env:
          NPM_CONFIG_LEGACY_PEER_DEPS: 'true'
        run: npm ci

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Log in to EAS (token)
        env:
          EAS_TOKEN: ${{ secrets.EAS_TOKEN }}
        run: eas whoami || eas login --token "$EAS_TOKEN"

      - name: Run EAS build (preview APK)
        env:
          EAS_TOKEN: ${{ secrets.EAS_TOKEN }}
        run: >-
          eas build --platform android --profile preview --non-interactive --no-wait

      - name: Poll build status
        env:
          EAS_TOKEN: ${{ secrets.EAS_TOKEN }}
        run: |
          echo "Waiting for build to finish..."
          eas build:list --limit 1 --status in-progress
          # Simple polling loop (max ~30 min)
          for i in {1..60}; do
            STATUS=$(eas build:list --limit 1 --json | jq -r '.[0].status')
            echo "Current status: $STATUS"
            if [ "$STATUS" = "finished" ]; then
              break
            elif [ "$STATUS" = "errored" ] || [ "$STATUS" = "canceled" ]; then
              echo "Build failed or canceled" >&2
              exit 1
            fi
            sleep 30
          done
          eas build:list --limit 1

      - name: Retrieve latest artifact URL
        id: artifact
        env:
          EAS_TOKEN: ${{ secrets.EAS_TOKEN }}
        run: |
          URL=$(eas build:list --limit 1 --json | jq -r '.[0].artifacts.buildUrl')
          echo "Artifact URL: $URL"
          echo "apk_url=$URL" >> $GITHUB_OUTPUT

      - name: Add artifact URL to summary
        run: |
          echo "APK Download URL: ${{ steps.artifact.outputs.apk_url }}" >> $GITHUB_STEP_SUMMARY
